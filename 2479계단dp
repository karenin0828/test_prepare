n = int(input())
s = [0 for i in range(301)]
dp = [0 for i in range(301)]
for i in range(n):
    s[i] = int(input())
dp[0] = s[0]
dp[1] = s[0] + s[1]
dp[2] = max(s[1] + s[2], s[0] + s[2])
for i in range(3, n):
    dp[i] = max(dp[i - 3] + s[i - 1] + s[i], dp[i - 2] + s[i])
print(dp[n - 1])

#dp 문제는 첫 번째, 두 번째가 채워진 dp 리스트에 대해 세 번째를 어떻게 만족시킬 것인지,
그게 네 번째까지 보장을 해주는지에 집중하면 쉽게 풀린다.
#dp와 s를 결합하여 점화식을 만드는 것이다. dp로만 조합하여 만드는 것이 아니라
 dp[i] = max(dp[i - 3] + dp[i - 1] + dp[i], dp[i - 2] + dp[i])
