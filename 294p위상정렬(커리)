from collections import deque

v,e= map(int, input().split())

indegree=[0]*(v+1)

graph= [[] for i in range(v+1)]

for _ in range(e):
  a,b= map(int, input().split())
  graph[a].append(b)
  indegree[b]+=1

def topology_sort():
  result=[]
  q= deque()

  for i in range(1, v+1):
    if indegree[i]==0:
      q.append(i)

  while q:
    now=q.popleft()
    result.append(now)
    for i in graph[now]:
      indegree[i]-=1

      if indegree[i]==0:
        q.append(i)

  for i in result:
    print(i, end=' ')

topology_sort()    

####


1. while문


큐에 있는 노드 빼주고
결과값에 노드 넣어주고
그 노드에 연결된 다른 노드들의 진입차수 하나씩 빼주고
만댝 새로 진입차수=0인 노드가 나온다면 큐에 넣어주고
