n= int(input())

d= [0]*1001

d[1]= 1
d[2]= 3
for i in range(3, n+1):
  d[i]= (d[i-1]+2*d[i-2])%237122

print(d[n])


###

1. 

동적계획법은 문제의 최적해를 구하거나 답의 개수를 세는 과정에 사용할 수 있는 알고리즘 설계 기법입니다.
동적계획법을 사용하면 불필요한 계산을 줄이고, 효율적으로 최적해를 찾을 수 있습니다.
동적계획법은 “전체 문제를 작은 문제로 단순화한 다음 점화식으로 만들어 재귀적인 구조를 활용해서 전체 문제를 해결하는 방식” 입니다.
전체 문제를 작은 문제로 단순화한다. -> 부분 문제를 정의한다.
재귀적인 구조를 활용할 수 있는 점화식을 만든다. -> 점화식을 만든다.
작은 문제를 해결한 방법으로 전체 문제를 해결한다. -> 문제를 해결한다.

즉, 점화식으로 만들 수 있으면 그게 곧 다이나믹 프로그래밍이다. 여기서는 a^n= a^(n-1)+ 2a^(n-2)

2. 

왼쪽부터 채워나가고, 일반적인 a^n이 전항과의 관계을 통해 어떻게 만들어나갈 수 있을지 생각해보자
