from collections import deque
import copy

v= int(input())
indegree=[0]*(v+1)
graph=[[] for i in range(v+1)]
time=[0]*(v+1)

for i  in range(1, v+1):
  data= list(map(int, input().split()))
  time[i]= data[0]
  for x in data[1:-1]:
    indegree[i]+= 1
    graph[x].append(i)

def topology_sort():
  result= copy.decopy(time)
  q= deque()

  for i in range(1, v+1):
    if indegree[i]==0:
      q.append(i)

  while q:
    now= q.popleft()
    for i in graph[now]:
      result[i]= max(result[i], result[now]+ time[i])
      indegree[i]-= 1
      if indegree[i]==0:
        q.append(i)

for i in range(1, v+1):
  print(result[i])
  
1. 위성탐색 유형은 두가지가 같이간다. 큐에서 빼는 것과 연결차수를 하나씩 빼주는 것

2. 리스트를 복사할때는 deepcopy를 통해 복사한다. 
https://inkkim.github.io/python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%B3%B5%EC%82%AC/

3. 리스트 인덱싱에서 -1인 마지막 수를 뜻한다. 인덱싱의 끝은 포함되지 않는다는 것 까먹지 말고

4.  A= max(A, C)는 어떤 값을 갱신해 나갈때 유용한 툴이다. 
